using Robust.Client.AutoGenerated;
using Robust.Client.UserInterface;
using Robust.Client.UserInterface.XAML;
using Robust.Shared.Timing;

namespace Content.Client.Survey;

[GenerateTypedNameReferences]
public sealed partial class SurveyPopup : Control
{
    [Dependency] private readonly IGameTiming _gameTiming = default!;
    [Dependency] private readonly SurveyManager _surveyManager = default!;

    private readonly ActiveSurvey _survey;

    public SurveyPopup(ActiveSurvey survey)
    {
        _survey = survey;

        IoCManager.InjectDependencies(this);
        RobustXamlLoader.Load(this);

        //EnterSurvey.OnPressed += _ =>
        DismissSurvey.OnPressed += _ => _surveyManager.CloseSurvey(_survey.Id);
    }

    protected override void FrameUpdate(FrameEventArgs args)
    {
        var curTime = _gameTiming.RealTime;
        var timeLeft = _survey.EndTime - curTime;
        if (timeLeft < TimeSpan.Zero)
            timeLeft = TimeSpan.Zero;

        timeLeft = TimeSpan.FromSeconds(Math.Ceiling(timeLeft.TotalSeconds));

        TimeLeftBar.Value = Math.Min(1, (float) ((curTime.TotalSeconds - _survey.StartTime.TotalSeconds) /
                                                 (_survey.EndTime.TotalSeconds - _survey.StartTime.TotalSeconds)));

        TimeLeftText.Text = $"{timeLeft:m\\:ss}";
    }
}

